@import '@/app/styles/utils';

.wrapper {
	position: fixed;
	z-index: var(--z-index-navbar);
	/* stylelint-disable-next-line value-no-vendor-prefix */
	width: -webkit-fill-available; // 100%
	height: var(--navbar-height);
	backdrop-filter: var(--blur-xl);
	border-bottom: 1px solid var(--color-border);

	@include background(.5);

	[class="light"] & {
		@include background(1);

		backdrop-filter: none;
	}

	@media (max-width: theme('screens.md')) {
		backdrop-filter: none;

		@include background(1);
	}

	@media (max-width: theme('screens.sm')) {
		bottom: 0;
		height: var(--navbar-height-mobile);
		border-top: 1px solid var(--color-border);
		border-bottom: none;
	}
}

.content {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%;
}

.spacer {
	position: relative;
	height: var(--navbar-height);

	@media (max-width: theme('screens.sm')) {
		height: var(--navbar-height-search-mobile);
	}
}

.input {
	width: 155px;
	transition: all .3s ease;

	@media (max-width: theme('screens.sm')) {
		width: 100%;
	}

	input {
		color: rgb(255, 255, 255, 50%);
	}

	img,
	svg {
		opacity: .5;
		transition: opacity .3s ease;
	}

	[data-focus="true"] {
		background: rgb(var(--color-main-inverted-rgb), .1) !important;

		img,
		svg {
			opacity: 1;
		}
	}

	[data-slot="input-wrapper"] {
		background: rgb(var(--color-main-inverted-rgb), .05);

		@media (max-width: theme('screens.sm')) {
			height: 40px;
			padding: 0 12px;

			@apply rounded-xl;
		}

		&:hover {
			background: rgb(var(--color-main-inverted-rgb), .1);
		}
	}
}

.controlButtons {
	$opacity-buttons: .2;

	display: flex;

	button {
		width: 40px;
		height: 40px;
		padding: 0;
		color: rgba(var(--color-text), .2);
		border: 1px solid transparent;

		@apply rounded-large;

		&:hover {
			border: 1px solid var(--color-border);

			img,
			svg {
				opacity: 1 !important;
			}
		}
	}

	/* stylelint-disable-next-line no-descending-specificity */
	img,
	svg {
		min-width: 24px;
		height: 24px;
		opacity: $opacity-buttons !important;
		transition: all .3s ease;
	}

	svg *[stroke] {
		stroke: var(--color-main-inverted);
	}
}